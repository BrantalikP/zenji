/**
 * Generated by @openapi-codegen
 *
 * @version 20170710.0
 */
/**
 * Errors with a message will return with the follow response body structure
 */
export type BaseError = {
  error: string
  code: number
}

export type BaseResource = {
  id: number
  object: ResourceObjectType
  url: string
  /**
   * @format date-time
   */
  data_updated_at: string
}

export type ResourceObjectType =
  | 'assignment'
  | 'kanji'
  | 'level_progression'
  | 'radical'
  | 'reset'
  | 'review_statistic'
  | 'review'
  | 'spaced_repetition_system'
  | 'study_material'
  | 'user'
  | 'vocabulary'

export type CollectionObjectType = 'collection' | 'report'

export type BaseCollection = {
  object: CollectionObjectType
  url: string
  pages: {
    next_url: string | null
    previous_url: string | null
    per_page: number
  }
  total_count: number
  /**
   * @format date-time
   */
  data_updated_at: string
}

export type Assignment = BaseResource & {
  data: {
    /**
     * Timestamp when the related subject will be available in the user's review queue.
     *
     * @format date-time
     */
    available_at: string | null
    /**
     * Timestamp when the user reaches SRS stage 9 the first time.
     *
     * @format date-time
     */
    burned_at: string | null
    /**
     * Timestamp when the assignment was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
     */
    hidden: boolean
    /**
     * Timestamp when the user reaches SRS stage 5 for the first time.
     *
     * @format date-time
     */
    passed_at: string | null
    /**
     * Timestamp when the subject is resurrected and placed back in the user's review queue.
     *
     * @format date-time
     */
    resurrected_at: string | null
    /**
     * Current SRS stage interval. The interval range is determined by the related subject's spaced repetition system.
     */
    srs_stage: number
    /**
     * Timestamp when the user completes the lesson for the related subject.
     *
     * @format date-time
     */
    started_at: string | null
    /**
     * Unique identifier of the associated subject.
     */
    subject_id: number
    subject_type: SubjectType
    /**
     * The timestamp when the related subject has its prerequisites satisfied and is made available in lessons.
     *
     * @format date-time
     */
    unlocked_at: string | null
  }
}

export type Assignments = BaseCollection & {
  data: Assignment[]
}

export type LevelProgression = BaseResource & {
  data: {
    /**
     * Timestamp when the user abandons the level. This is primary used when the user initiates a reset.
     *
     * @format date-time
     */
    abandoned_at: string | null
    /**
     * Timestamp when the user burns 100% of the assignments belonging to the associated subject's level.
     *
     * @format date-time
     */
    completed_at: string | null
    /**
     * Timestamp when the level progression is created
     *
     * @format date-time
     */
    created_at: string
    /**
     * The level of the progression, with possible values from 1 to 60.
     */
    level: number
    /**
     * Timestamp when the user passes at least 90% of the assignments with a type of kanji belonging to the associated subject's level.
     *
     * @format date-time
     */
    passed_at: string | null
    /**
     * Timestamp when the user starts their first lesson of a subject belonging to the level.
     *
     * @format date-time
     */
    started_at: string | null
    /**
     * Timestamp when the user can access lessons and reviews for the level.
     *
     * @format date-time
     */
    unlocked_at: string | null
  }
}

export type LevelProgressions = BaseCollection & {
  data: LevelProgression[]
}

export type Reset = BaseResource & {
  data: {
    /**
     * Timestamp when the user confirmed the reset.
     *
     * @format date-time
     */
    confirmed_at: string | null
    /**
     * Timestamp when the reset was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * The user's level before the reset, from 1 to 60
     */
    original_level: number
    /**
     * The user's level after the reset, from 1 to 60. It must be less than or equal to original_level.
     */
    target_level: number
  }
}

export type Resets = BaseCollection & {
  data: Reset[]
}

export type Review = BaseResource & {
  data: {
    /**
     * Unique identifier of the associated assignment.
     */
    assignment_id: number
    /**
     * Timestamp when the review was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * The SRS stage interval calculated from the number of correct and incorrect answers, with valid values ranging from 1 to 9
     */
    ending_srs_stage: number
    /**
     * The number of times the user has answered the meaning incorrectly.
     */
    incorrect_meaning_answers: number
    /**
     * The number of times the user has answered the reading incorrectly.
     */
    incorrect_reading_answers: number
    /**
     * Unique identifier of the associated spaced_repetition_system.
     */
    spaced_repetition_system_id: number
    /**
     * The starting SRS stage interval, with valid values ranging from 1 to 8
     */
    starting_srs_stage: number
    /**
     * Unique identifier of the associated subject.
     */
    subject_id: number
  }
}

export type Reviews = BaseCollection & {
  data: Review[]
}

export type StartAssignmentRequest = {
  /**
   * @format date-time
   */
  started_at?: string
}

export type CreateReviewRequest = {
  review?: CreateReview
}

export type CreateReviewResponse = BaseResource & {
  data: CreateReview
  resources_updated: {
    assignment: Assignment
    review_statistic: ReviewStatistic
  }
}

export type CreateReview = {
  /**
   * Unique identifier of the associated assignment.
   */
  assignment_id: number
  /**
   * Timestamp when the review was created.
   *
   * @format date-time
   */
  created_at?: string
  /**
   * The SRS stage interval calculated from the number of correct and incorrect answers, with valid values ranging from 1 to 9
   */
  ending_srs_stage?: number
  /**
   * The number of times the user has answered the meaning incorrectly.
   */
  incorrect_meaning_answers: number
  /**
   * The number of times the user has answered the reading incorrectly.
   */
  incorrect_reading_answers: number
  /**
   * Unique identifier of the associated spaced_repetition_system.
   */
  spaced_repetition_system_id?: number
  /**
   * The starting SRS stage interval, with valid values ranging from 1 to 8
   */
  starting_srs_stage?: number
  /**
   * Unique identifier of the associated subject.
   */
  subject_id: number
}

export type ReviewStatistic = BaseResource & {
  data: {
    /**
     * Timestamp when the review statistic was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
     */
    hidden: boolean
    /**
     * Total number of correct answers submitted for the meaning of the associated subject.
     */
    meaning_correct: number
    /**
     * The current, uninterrupted series of correct answers given for the meaning of the associated subject.
     */
    meaning_current_streak: number
    /**
     * Total number of incorrect answers submitted for the meaning of the associated subject.
     */
    meaning_incorrect: number
    /**
     * The longest, uninterrupted series of correct answers ever given for the meaning of the associated subject.
     */
    meaning_max_streak: number
    /**
     * The overall correct answer rate by the user for the subject, including both meaning and reading.
     */
    percentage_correct: number
    /**
     * Total number of correct answers submitted for the reading of the associated subject.
     */
    reading_correct: number
    /**
     * The current, uninterrupted series of correct answers given for the reading of the associated subject.
     */
    reading_current_streak: number
    /**
     * Total number of incorrect answers submitted for the reading of the associated subject.
     */
    reading_incorrect: number
    /**
     * The longest, uninterrupted series of correct answers ever given for the reading of the associated subject.
     */
    reading_max_streak: number
    /**
     * Unique identifier of the associated subject.
     */
    subject_id: number
    subject_type: SubjectType
  }
}

export type ReviewStatistics = BaseCollection & {
  data: ReviewStatistic[]
}

export type StageAttributes = {
  /**
   * The length of time added to the time of review registration, adjusted to the beginning of the hour.
   */
  interval: number | null
  /**
   * Unit of time. Can be the following: milliseconds, seconds, minutes, hours, days, and weeks.
   */
  interval_unit: 'milliseconds' | 'seconds' | 'minutes' | 'hours' | 'days' | 'weeks' | null
  /**
   * The position of the stage within the continuous order.
   */
  position: number
}

export type SpacedRepetitionSystem = BaseResource & {
  data: {
    /**
     * position of the burning stage.
     */
    burning_stage_position: number
    /**
     * Timestamp when the spaced_repetition_system was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * Details about the spaced repetition system.
     */
    description: string
    /**
     * The name of the spaced repetition system
     */
    name: string
    /**
     * position of the passing stage.
     */
    passing_stage_position: number
    /**
     * A collection of stages. See table below for the object structure.
     */
    stages: StageAttributes[]
    /**
     * position of the starting stage.
     */
    starting_stage_position: number
    /**
     * position of the unlocking stage.
     */
    unlocking_stage_position: number
  }
}

export type SpacedRepetitionSystems = BaseCollection & {
  data: SpacedRepetitionSystem[]
}

export type StudyMaterial = BaseResource & {
  data: {
    /**
     * Timestamp when the study material was created.
     *
     * @format date-time
     */
    created_at: string
    /**
     * Indicates if the associated subject has been hidden, preventing it from appearing in lessons or reviews.
     */
    hidden: boolean
    /**
     * Free form note related to the meaning(s) of the associated subject.
     */
    meaning_note: string | null
    /**
     * Synonyms for the meaning of the subject. These are used as additional correct answers during reviews.
     */
    meaning_synonyms: string[]
    /**
     * Free form note related to the reading(s) of the associated subject.
     */
    reading_note: string | null
    /**
     * Unique identifier of the associated subject.
     */
    subject_id: number
    subject_type: SubjectType
  }
}

export type StudyMaterials = BaseCollection & {
  data: StudyMaterial[]
}

export type AuxiliaryMeaning = {
  /**
   * A singular subject meaning.
   */
  meaning: string
  /**
   * Either whitelist or blacklist. When evaluating user input, whitelisted meanings are used to match for correctness. Blacklisted meanings are used to match for incorrectness.
   */
  type: string
}

export type Meaning = {
  /**
   * A singular subject meaning.
   */
  meaning: string
  /**
   * Indicates priority in the WaniKani system.
   */
  primary: boolean
  /**
   * Indicates if the meaning is used to evaluate user input for correctness.
   */
  accepted_answer: boolean
}

/**
 * The type of the associated subject, one of: kanji, radical, or vocabulary.
 */
export type SubjectType = 'kanji' | 'radical' | 'vocabulary'

export type CommonSubject = {
  /**
   * Collection of auxiliary meanings. See table below for the object structure.
   */
  auxiliary_meanings: AuxiliaryMeaning[]
  /**
   * The UTF-8 characters for the subject, including kanji and hiragana.
   */
  characters: string
  /**
   * Timestamp when the subject was created.
   *
   * @format date-time
   */
  created_at: string
  /**
   * A URL pointing to the page on wanikani.com that provides detailed information about this subject.
   */
  document_url: string
  /**
   * Timestamp when the subject was hidden, indicating associated assignments will no longer appear in lessons or reviews and that the subject page is no longer visible on wanikani.com.
   *
   * @format date-time
   */
  hidden_at: string | null
  /**
   * The position that the subject appears in lessons. Note that the value is scoped to the level of the subject, so there are duplicate values across levels.
   */
  lesson_position: number
  /**
   * The level of the subject, from 1 to 60.
   */
  level: number
  /**
   * The subject's meaning mnemonic.
   */
  meaning_mnemonic: string
  /**
   * The subject meanings.
   */
  meanings: Meaning[]
  /**
   * The string that is used when generating the document URL for the subject. Radicals use their meaning, downcased. Kanji and vocabulary use their characters.
   */
  slug: string
  /**
   * Unique identifier of the associated spaced_repetition_system.
   */
  spaced_repetition_system_id: number
}

export type RadicalSubject = {
  /**
   * Collection of auxiliary meanings. See table below for the object structure.
   */
  auxiliary_meanings?: AuxiliaryMeaning[]
  /**
   * Unlike kanji and vocabulary, radicals can have a null value for characters. Not all radicals have a UTF entry, so the radical must be visually represented with an image instead.
   */
  characters: string | null
  /**
   * Timestamp when the subject was created.
   *
   * @format date-time
   */
  created_at?: string
  /**
   * A URL pointing to the page on wanikani.com that provides detailed information about this subject.
   */
  document_url: string
  /**
   * Timestamp when the subject was hidden, indicating associated assignments will no longer appear in lessons or reviews and that the subject page is no longer visible on wanikani.com.
   *
   * @format date-time
   */
  hidden_at: string | null
  /**
   * The position that the subject appears in lessons. Note that the value is scoped to the level of the subject, so there are duplicate values across levels.
   */
  lesson_position: number
  /**
   * The level of the subject, from 1 to 60.
   */
  level: number
  /**
   * The subject's meaning mnemonic.
   */
  meaning_mnemonic: string
  /**
   * The subject meanings.
   */
  meanings: Meaning[]
  /**
   * The string that is used when generating the document URL for the subject. Radicals use their meaning, downcased. Kanji and vocabulary use their characters.
   */
  slug: string
  /**
   * Unique identifier of the associated spaced_repetition_system.
   */
  spaced_repetition_system_id: number
  /**
   * An array of numeric identifiers for the kanji that have the radical as a component.
   */
  amalgamation_subject_ids: number[]
  /**
   * A collection of images of the radical. See table below for the object structure.
   */
  character_images: RadicalCharacterImage[]
}

export type KanjiSubject = CommonSubject & {
  /**
   * An array of numeric identifiers for the vocabulary that have the kanji as a component.
   */
  amalgamation_subject_ids: number[]
  /**
   * An array of numeric identifiers for the radicals that make up this kanji. Note that these are the subjects that must have passed assignments in order to unlock this subject's assignment.
   */
  component_subject_ids: number[]
  /**
   * Meaning hint for the kanji.
   */
  meaning_hint: string | null
  /**
   * Reading hint for the kanji.
   */
  reading_hint: string | null
  /**
   * The kanji's reading mnemonic.
   */
  reading_mnemonic: string
  /**
   * Selected readings for the kanji. See table below for the object structure.
   */
  readings: KanjiReading[]
  /**
   * An array of numeric identifiers for kanji which are visually similar to the kanji in question.
   */
  visually_similar_subject_ids: number[]
}

export type VocabSubject = {
  /**
   * Collection of auxiliary meanings. See table below for the object structure.
   */
  auxiliary_meanings?: AuxiliaryMeaning[]
  /**
   * The UTF-8 characters for the subject, including kanji and hiragana.
   */
  characters?: string
  /**
   * Timestamp when the subject was created.
   *
   * @format date-time
   */
  created_at?: string
  /**
   * A URL pointing to the page on wanikani.com that provides detailed information about this subject.
   */
  document_url?: string
  /**
   * Timestamp when the subject was hidden, indicating associated assignments will no longer appear in lessons or reviews and that the subject page is no longer visible on wanikani.com.
   *
   * @format date-time
   */
  hidden_at?: string | null
  /**
   * The position that the subject appears in lessons. Note that the value is scoped to the level of the subject, so there are duplicate values across levels.
   */
  lesson_position?: number
  /**
   * The level of the subject, from 1 to 60.
   */
  level?: number
  /**
   * The subject's meaning mnemonic.
   */
  meaning_mnemonic: string
  /**
   * The subject meanings.
   */
  meanings: Meaning[]
  /**
   * The string that is used when generating the document URL for the subject. Radicals use their meaning, downcased. Kanji and vocabulary use their characters.
   */
  slug: string
  /**
   * Unique identifier of the associated spaced_repetition_system.
   */
  spaced_repetition_system_id: number
  /**
   * An array of numeric identifiers for the kanji that make up this vocabulary. Note that these are the subjects that must be have passed assignments in order to unlock this subject's assignment.
   */
  component_subject_ids: number[]
  /**
   * A collection of context sentences. See table below for the object structure.
   */
  context_sentences: ContextSentence[]
  /**
   * Parts of speech.
   */
  parts_of_speech: string[]
  /**
   * A collection of pronunciation audio. See table below for the object structure.
   */
  pronunciation_audios: PronunciationAudio[]
  /**
   * Selected readings for the vocabulary. See table below for the object structure.
   */
  readings: VocabReading[]
  /**
   * The subject's reading mnemonic.
   */
  reading_mnemonic: string
}

export type ContextSentence = {
  /**
   * English translation of the sentence
   */
  en: string
  /**
   * Japanese context sentence
   */
  ja: string
}

export type PronunciationAudio = {
  /**
   * The location of the audio.
   */
  url: string
  /**
   * The content type of the audio. Currently the API delivers audio/mpeg and audio/ogg.
   */
  content_type: string
  /**
   * Details about the pronunciation audio. See table below for details.
   */
  metadata: {
    /**
     * The gender of the voice actor.
     */
    gender: string
    /**
     * A unique ID shared between same source pronunciation audio.
     */
    source_id: number
    /**
     * Vocabulary being pronounced in kana.
     */
    pronunciation: string
    /**
     * A unique ID belonging to the voice actor.
     */
    voice_actor_id: number
    /**
     * Humanized name of the voice actor.
     */
    voice_actor_name: string
    /**
     * Description of the voice.
     */
    voice_description: string
  }
}

export type BaseReading = {
  /**
   * A singular subject reading.
   */
  reading: string
  /**
   * Indicates priority in the WaniKani system.
   */
  primary: boolean
  /**
   * Indicates if the reading is used to evaluate user input for correctness.
   */
  accepted_answer: boolean
}

export type KanjiReading = BaseReading & {
  /**
   * The kanji reading's classfication: kunyomi, nanori, or onyomi.
   */
  type: 'kunyomi' | 'nanori' | 'onyomi'
}

export type VocabReading = BaseReading

export type RadicalCharacterImage = {
  /**
   * The location of the image.
   */
  url: string
  /**
   * The content type of the image. Currently the API delivers image/png and image/svg+xml.
   */
  content_type: string
  /**
   * Details about the image. Each content_type returns a uniquely structured object.
   */
  metadata: ImagePngMetadata | ImageSvgMetadata
}

export type ImageSvgMetadata = {
  /**
   * The SVG asset contains built-in CSS styling
   */
  inline_styles: boolean
}

export type ImagePngMetadata = {
  /**
   * Color of the asset in hexadecimal
   */
  color: string
  /**
   * Dimension of the asset in pixels
   */
  dimensions: string
  /**
   * A name descriptor
   */
  style_name: string
}

export type Subject = BaseResource & {
  data: RadicalSubject | KanjiSubject | VocabSubject
}

export type Subjects = BaseCollection & {
  data: Subject[]
}

export type VoiceActor = BaseResource & {
  data: {
    /**
     * Details about the voice actor.
     */
    description: string
    /**
     * male or female
     */
    gender: string
    /**
     * The voice actor's name
     */
    name: string
  }
}

export type VoiceActors = BaseCollection & {
  data: VoiceActor[]
}

/**
 * User settings specific to the WaniKani application. See table below for the object structure.
 */
export type UserPreferences = {
  /**
   * The voice actor to be used for lessons and reviews. The value is associated to subject.pronunciation_audios.metadata.voice_actor_id.
   */
  default_voice_actor_id: number
  /**
   * Automatically play pronunciation audio for vocabulary during lessons.
   */
  lessons_autoplay_audio: boolean
  /**
   * Number of subjects introduced to the user during lessons before quizzing.
   */
  lessons_batch_size: number
  /**
   * The order in which lessons are presented. The options are ascending_level_then_subject, shuffled, and ascending_level_then_shuffled. The default (and best experience) is ascending_level_then_subject.
   */
  lessons_presentation_order:
    | 'ascending_level_then_subject'
    | 'shuffled'
    | 'ascending_level_then_shuffled'
  /**
   * Automatically play pronunciation audio for vocabulary during reviews.
   */
  reviews_autoplay_audio: boolean
  /**
   * Toggle for display SRS change indicator after a subject has been completely answered during review.
   */
  reviews_display_srs_indicator: boolean
}

/**
 * Details about the user's subscription state. See table below for the object structure.
 */
export type UserSubscription = {
  /**
   * Whether or not the user currently has a paid subscription.
   */
  active: boolean
  /**
   * The maximum level of content accessible to the user for lessons, reviews, and content review. For unsubscribed/free users, the maximum level is 3. For subscribed users, this is 60. Any application that uses data from the WaniKani API must respect these access limits.
   */
  max_level_granted: number
  /**
   * The date when the user's subscription period ends. If the user has subscription type lifetime or free then the value is null.
   *
   * @format date-time
   */
  period_ends_at: string | null
  /**
   * The type of subscription the user has. Options are following: free, recurring, and lifetime.
   */
  type: 'free' | 'recurring' | 'lifetime'
}

export type User = BaseResource & {
  data: {
    /**
     * If the user is on vacation, this will be the timestamp of when that vacation started. If the user is not on vacation, this is null.
     *
     * @format date-time
     */
    current_vacation_started_at: string | null
    /**
     * The current level of the user. This ignores subscription status.
     */
    level: number
    preferences: UserPreferences
    /**
     * The URL to the user's public facing profile page.
     */
    profile_url: string
    /**
     * The signup date for the user.
     *
     * @format date-time
     */
    started_at: string
    subscription: UserSubscription
    /**
     * The user's username.
     */
    username: string
  }
}

export type SummaryLessons = {
  /**
   * When the paired subject_ids are available for lessons. Always beginning of the current hour when the API endpoint is accessed.
   *
   * @format date-time
   */
  available_at: string
  /**
   * Collection of unique identifiers for subjects.
   */
  subject_ids: number[]
}

export type SummaryReviews = {
  /**
   * When the paired subject_ids are available for reviews. All timestamps are the top of an hour.
   *
   * @format date-time
   */
  available_at: string
  /**
   * Collection of unique identifiers for subjects.
   */
  subject_ids: number[]
}

export type Summary = BaseResource & {
  data: {
    /**
     * Details about subjects available for lessons. See table below for object structure.
     */
    lessons: SummaryLessons[]
    /**
     * Earliest date when the reviews are available. Is null when the user has no reviews scheduled.
     *
     * @format date-time
     */
    next_reviews_at: string | null
    /**
     * Details about subjects available for reviews now and in the next 24 hours by the hour (total of 25 objects). See table below for object structure.
     */
    reviews: SummaryReviews[]
  }
}
